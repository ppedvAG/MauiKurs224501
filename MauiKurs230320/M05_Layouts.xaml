<?xml version="1.0" encoding="utf-8" ?>
<!--vgl. CodeBehind-->
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:comp="clr-namespace:Microsoft.Maui.Controls.Compatibility;assembly=Microsoft.Maui.Controls"
             x:Class="MauiKurs230320.Layouts"
             Title="Layouts">
    <ScrollView>
        <!--Das Layouting erfolgt über die Auswahl der Layoutcontainer und deren Kombinationen sowie über 
        Control-Properties wie Vertical/HorizontalOptions, Margin, Padding, Heigth/WidhtRequest-->
        <StackLayout Margin="10">
            <Frame BorderColor="Black" Padding="5">
                <!--StackLayouts ordnen ihre Children-Elemente gemäß ihrer Orientation-Property unter- oder nebeneinander an.
                Spacing gibt den Abstand zwischen den einzelnen Elementen an-->
                <Frame.Content>
                    <StackLayout HeightRequest="700"
                                 Orientation="Vertical"
                                 Spacing="20">
                        <Label Text="1st Label"
                               BackgroundColor="Red"/>
                        <Label Text="2st Label"
                               BackgroundColor="Green"/>
                        <Label Text="3st Label"
                               BackgroundColor="Yellow"/>
                        <Label Text="4st Label"
                               BackgroundColor="Blue"
                               VerticalOptions="FillAndExpand"/>
                    </StackLayout>
                </Frame.Content>
            </Frame>

            <Frame BorderColor="Black" Padding="5">
                <Grid HeightRequest="700"
                      ColumnSpacing="10"
                      RowSpacing="10"
                      ColumnDefinitions="100,*">
                    <!--In einem Grid können Anzahl der Spalten und Zeilen sowie deren Breite/Höhe definiert werden-->
                    <!--Breiten- und Höhenangaben der Zeilen/Spalten können aus absolute Werte, Auto (= automatische
                        Angleichung an den Inhalt) oder * (= Aufteilung des restlichen Platzes) gesetzt werden-->
                    <Grid.RowDefinitions>
                        <RowDefinition Height="100"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="2*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!--Jedem Element muss eine Row und eine Column zugewiesen werden, in der es angezeigt werden soll.
                        Mittels RowSpan und ColumnSpan kann ein Element mehrere Zeilen/Spalten umfassen-->
                    <Label Text="1st Label"
                           BackgroundColor="Red"
                           Grid.Column="0"
                           Grid.Row="0"/>
                    <Label Text="2nd Label"
                       BackgroundColor="Green"
                           Grid.Column="1"
                           Grid.Row="0"/>
                    <Label Text="3rd Label"
                       BackgroundColor="Yellow"
                           Grid.Column="0"
                           Grid.Row="1"
                           HorizontalOptions="Start"/>
                    <Label Text="4th Label"
                       BackgroundColor="Blue"
                           Grid.Column="1"
                           Grid.Row="1"/>
                    <Label Text="5th Label"
                           BackgroundColor="Orange"
                           Grid.Column="0"
                           Grid.Row="2"
                           Grid.ColumnSpan="2"
                           HorizontalOptions="Center"/>
                    <Button Text="Verschieben" Grid.Row="3"
                        Clicked="Button_Clicked"
                        x:Name="Btn_Move"/>
                </Grid>
            </Frame>

            <Frame BorderColor="Black" Padding="5">
                <!--In einem AbsoluteLayout ist jedem Element eine absolute Position zugeordnet-->
                <!--Diese wird durch die Property LayouBounds defniert. Die vier Zahlen repräsentieren X-Position, Y-Position, Breite, Höhe-->
                <!--Die Property LayoutFlags definiert, welche der vier Zahlen in relativen Werten angegeben sind, anstatt in standartmäßigen
                absoluten Werten-->
                <AbsoluteLayout HeightRequest="700">
                    <Label Text="1st Label"
                       BackgroundColor="Red"
                           AbsoluteLayout.LayoutFlags="All"
                           AbsoluteLayout.LayoutBounds="0.5, 0.5, 0.1, 0.2"/>
                    <Label Text="2st Label"
                       BackgroundColor="Green"
                           AbsoluteLayout.LayoutFlags="None"
                           AbsoluteLayout.LayoutBounds="100, 200, 150, 150"/>
                    <Label Text="3st Label"
                       BackgroundColor="Yellow"
                           AbsoluteLayout.LayoutFlags="SizeProportional"
                           AbsoluteLayout.LayoutBounds="80, 100, 0.1, 0.2"/>
                    <Label Text="4st Label"
                       BackgroundColor="Blue"/>
                </AbsoluteLayout>
            </Frame>

            <Frame BorderColor="Black" Padding="5" >
                <comp:RelativeLayout HeightRequest="500">
                    <Label x:Name="Lbl_Eins" BackgroundColor="Red" Text="LABEL 1"
                           comp:RelativeLayout.XConstraint="{comp:ConstraintExpression Type=Constant, Constant=100}"
                           comp:RelativeLayout.WidthConstraint="{comp:ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.5}"/>
                    <Label x:Name="Lbl_Zwei" BackgroundColor="Blue" Text="LABEL2"
                           comp:RelativeLayout.WidthConstraint="{comp:ConstraintExpression Type=RelativeToView, ElementName=Lbl_Eins, Property=Width, Factor=0.2}"/>
                </comp:RelativeLayout>
            </Frame>
            <Frame BorderColor="Black" Padding="5">
                <!--Das FlexLayout ist ein hochflexibeler Container mit einer Vielzahl an Einstellungsmöglichkeiten
                zur Ausrichtung und zum Verhalten der Inhalte. Diese erfolgen z.T. über Eigenschaften des Containers
                und z.T. über AttachedProperties-->
                <FlexLayout HeightRequest="739"
                            Direction="Row"
                            Wrap="Wrap"
                            AlignItems="Start"
                            JustifyContent="SpaceAround"
                            AlignContent="SpaceBetween">

                    <Label Text="1st Label"
                           BackgroundColor="Red"
                           FlexLayout.Basis="50%"/>
                    <Label Text="2nd Label"
                           BackgroundColor="Green"
                           FlexLayout.Order="1"/>
                    <Label Text="3rd Label"
                           BackgroundColor="Blue"/>
                    <Label Text="4th Label"
                           BackgroundColor="Yellow"
                           FlexLayout.AlignSelf="Start"/>
                    <Label Text="5th Label"
                           BackgroundColor="Orange"/>
                    <Label Text="6th Label"
                           BackgroundColor="Purple"
                           />
                    <Label Text="7th Label"
                           BackgroundColor="Black"
                           FlexLayout.Order="-1"/>
                </FlexLayout>
            </Frame>
        </StackLayout>
    </ScrollView>
</ContentPage>